You're building Ossy Skill Tube, a full-stack Next.js + Firebase web app for uploading, buying, and attending skill-based video lessons. The platform merges e-learning, creator empowerment, community contribution, and offline access.  🌍 Features Required: ✅ 1. Auth & Profiles Google Auth + Magic Link login  Auto-assign "viewer" profile on first login  Auto-upgrade to “creator” upon first video upload  Store user role in Firestore  ✅ 2. Home Page Netflix-style intro screen (MotionHeader) with animated transition  Category filters (CATEGORIES from utils)  Tabs: “Explore” (all videos) & “My Library” (purchased/downloaded)  Search by title  Wallet balance shown in header (WalletContext)  Video previews show 40s clips only  Owned videos show "Watch" instead of "Buy"  ✅ 3. Upload & Compression Vault Upload modal: video + thumbnail + price + category  On upload:  Generate 40s preview and compress full video  Store full video locally in /vault  Store preview + metadata in Firebase  Save full path reference to Firebase, not full video  ✅ 4. Video Card Logic Shows thumbnail  "Buy" button (if not owned) → triggers wallet deduction, downloads full video ZIP to /library, and unzips for offline play  "Watch" if already owned  ✅ 5. Viewer Library Library loads videos owned locally  Local library sync (from localLibrary.ts)  Auto playback with fallback for offline users  ✅ 6. Creator Dashboard View uploaded videos + stats: views, purchases, preview clicks  Auto discount suggestion if previews >> purchases  Live class progress meter (unlock when rating + videos threshold met)  ✅ 7. Live Classes System Creators set availability → generates calendar slots  Each booked slot generates a LiveKit URL  On join: ticket sent to viewer, creator notified  System tracks:  Participants  Session duration  Saves recording  Sends to each participant’s library  ✅ 8. Compression + Vault Handling storeInVault.ts → compress video  createThumbnail.ts → generate preview  downloadAndSave.ts → move compressed video to /library and unzip  decompressHelper.ts → unzip on viewer side  ✅ 9. AI Scout System (Optional Feature) Monitors Reddit/YouTube/Facebook for relevant skills/questions  Sends invites or replies with matching OSSY videos  Includes a Founders Circle invite message  ✅ 10. Community & Skill Points System Wallet logic to store credits  Skill point system (0.10 OSSY profit goes to community pool)  Users can request help buying videos → micro-donations from others  “Recommend for live” logic boosts creators to unlock classes  🧠 Tech Stack: Frontend: Next.js 14+, Tailwind, Framer Motion  Backend: Firebase Firestore + Local Storage  Compression: Node.js (ffmpeg, archiver, unzipper)  Live Streaming: LiveKit on DigitalOcean Droplet  Payments: (Stripe / GCash - mocked now)  🗂 Directory Structure (Expected) bash Copy Edit ossy-skill-tube/ ├── public/             # thumbnails, previews ├── src/ │   ├── app/            # routes │   ├── components/     # VideoCard, MotionHeader, UI │   ├── context/        # Auth, Wallet │   ├── lib/            # utils, firebase, uploader │   ├── vault/          # storeInVault, decompress, localLibrary │   └── styles/ ├── dist/               # Build output └── .env                # Firebase, LiveKit creds 📦 Deliverables Fully wired frontend (React + Tailwind)  Backend API integration (Firestore + Vault)  Working video flow (upload → preview → buy → download → play)  Creator dashboard + calendar  Live class logic: generate link, notify buyers, save recording  Scout + message templates (stored, not active by default) Categories are the following  // src/utils/categories.ts  export const CATEGORIES = [   "All",   "AI & Automation",   "Ancestral Wisdom",   "Arts & Crafts",   "Automotive & Mechanics",   "Cooking & Culinary",   "Engineering & Design",   "Expat & Travel",   "Fitness & Wellness",   "Gardening & Sustainability",   "Languages & Culture",   "Music & Performance",   "Technology & Tools",   "Trade Techniques",   "Gaming & Game Dev", ];